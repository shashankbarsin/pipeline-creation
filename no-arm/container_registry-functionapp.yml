trigger:
- master

resources:
- repo: self

variables:
  # container registry service connection established during pipeline creation - Docker Hub/ACR/...
  ContainerRegistry.ServiceConnection: '{{containerRegistryServiceConnection}}'
  # name of the container registry specified for above service connection
  ContainerRegistry.Name: '{{containerRegistry}}'
  Image.Repository: '$(Build.Repository.Name)'
  Image.Tag: '$(Build.BuildId)'

  # Based on PORT in Dockerfile. Otherwise default value set
  Container.Port: {{containerPort}}
  
  # Details of the deployment target
  Azure.ServiceConnectionId: '{{ARMServiceConnection}}'
  FunctionApp.Name: '{{functionAppName}}'

  # Implicilty generated during pipeline creation flow
  Environment.Name: '{{environmentName}}'
  Environment.FunctionAppResource.Name: '{{FunctionAppResourceName}}'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(Image.Repository)
        containerRegistries: |
          $(ContainerRegistry.ServiceConnection)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy to Function App for Containers
    displayName: Deploy job
    environment: $(Environment.Name).$(Environment.FunctionAppResource.Name)
    steps:
    - task: AzureFunctionAppContainer@1
      displayName: Deploy to Function App for Containers
      inputs:
        azureSubscription: $(Azure.ServiceConnectionId)
        appName: $(FunctionApp.Name)
        imageName: $(ContainerRegistry.Name)/$(Image.Repository):$(Image.Tag)
        appSettings: '-Port $(Container.Port)'