trigger:
- master

resources:
- repo: self

variables:
  # container registry service connection established during pipeline creation - Docker Hub/ACR/...
  containerRegistryServiceConnection: '{{ containerRegistryServiceConnection }}'
  # name of the container registry specified for above service connection
  containerRegistry: '{{ containerRegistry }}'
  imageName: '$(Build.Repository.Name)'

  # Based on PORT in Dockerfile. Otherwise default value set
  containerPort: '{{ containerPort }}'

  # Implicilty generated during pipeline creation flow
  environmentName: '{{ environmentName }}'
  k8sresourceName: '{{ k8sResourceName }}'
  
jobs:
- job: Build
  displayName: Build
  steps:
  - use: docker
    auth:
    - $(containerRegistryServiceConnection)
  - task: Docker@2
    displayName: Build and push an image to container registry
    repository: $(imageName)

- deployment: Deploy to Kubernetes
  displayName: Deploy
  dependsOn: Build
  condition: succeeded()
  environment: $(environmentName).$(k8sResourceName)
  steps:
  - task: KubernetesManifestBased@1
    inputs:
      actions: deploy
      namespace: staging
      secrets:
      - secret1: containerRegistryServiceConnection
      containers:
      - $(containerRegistry)/$(imageName)
      inlineSpec: |
        kind: Deployment
        metadata:
          name: $(imageName)
        spec:
          replicas: 1
          template:
            metadata:
              labels:
                app: $(imageName)
            spec:
              containers:
              - name: $(imageName)
                image: $(containerRegistry)/$(imageName)
                ports:
                - containerPort: $(containerPort)
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: $(imageName)
        spec:
          type: LoadBalancer
          ports:
          - port: $(containerPort)
          selector:
            app: $(imageName)