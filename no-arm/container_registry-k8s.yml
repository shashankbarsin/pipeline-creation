trigger:
- master

resources:
- repo: self

variables:
  # container registry service connection established during pipeline creation - Docker Hub/ACR/...
  ContainerRegistry.ServiceConnection: '{{containerRegistryServiceConnection}}'
  # name of the container registry specified for above service connection
  ContainerRegistry.Name: '{{containerRegistry}}'
  Image.Repository: '$(Build.Repository.Name)'

  # Based on PORT in Dockerfile. Otherwise default value set
  Container.Port: {{containerPort}}

  # Implicilty generated during pipeline creation flow
  Environment.Name: '{{environmentName}}'
  Environment.k8sResource.Name: '{{k8sResourceName}}'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(Image.Repository)
        containerRegistries: |
          $(ContainerRegistry.ServiceConnection)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy to Kubernetes
    displayName: Deploy job
    environment: $(Environment.Name).$(Environment.k8sResource.Name)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@1
            displayName: Create secret or force update if it already exists
            inputs:
              action: createSecret
              secretType: dockerRegistry
              secretName: imagePullSecret1
              conatinerRegistry: $(ContainerRegistry.ServiceConnection)
          - task: KubernetesManifest@1
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              secrets: |
                imagePullSecret1 $(ContainerRegistry.ServiceConnection)
              manifests: |
                manifests/*
              containers: |
                $(ContainerRegistry.Name)/$(Image.Repository)
