trigger:
- master

resources:
- repo: self

variables:
  # container registry service connection established during pipeline creation - Docker Hub/ACR/...
  ContainerRegistry.ServiceConnection: '{{containerRegistryServiceConnection}}'
  # name of the container registry specified for above service connection
  ContainerRegistry.Name: '{{containerRegistry}}'
  Image.Repository: '$(Build.Repository.Name)'
  Image.Tag: '$(Build.BuildId)'

  # Based on PORT in Dockerfile. Otherwise default value set
  Container.Port: {{containerPort}}

  # Details of the deployment target
  Azure.ServiceConnectionId: '{{Azure.ServiceConnectionId}}'
  WebApp.Name: '{{webAppName}}'

  # Implicilty generated during pipeline creation flow
  Environment.Name: '{{environmentName}}'
  Environment.WebAppResource.Name: '{{WebAppResourceName}}'

jobs:
- job: Build
  displayName: Build
  steps:
  - use: docker
    auth:
    - $(ContainerRegistry.ServiceConnection)
  - script: |
      docker build -t $(ContainerRegistry.Name)/$(Image.Repository):$(Image.Tag)
      docker push $(ContainerRegistry.Name)/$(Image.Repository):$(Image.Tag)

- deployment: Deploy to Web App for Containers
  displayName: Deploy
  dependsOn: Build
  environment: $(Environment.Name).$(Environment.WebAppResource.Name)
  steps:
  - task: AzureWebAppContainer@1
    displayName: Deploy to Web App for Containers
    inputs:
      azureSubscription: $(Azure.ServiceConnectionId)
      appName: $(WebApp.Name)
      imageName: $(ContainerRegistry.Name)/$(Image.Repository):$(Image.Tag)
      appSettings: '-Port $(Container.Port)'