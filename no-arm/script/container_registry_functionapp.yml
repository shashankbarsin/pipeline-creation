trigger:
- master

resources:
- repo: self

variables:
  # container registry service connection established during pipeline creation - Docker Hub/ACR/...
  containerRegistryServiceConnection: '{{ containerRegistryServiceConnection }}'
  # name of the container registry specified for above service connection
  containerRegistry: '{{ containerRegistry }}'
  imageName: '$(Build.Repository.Name)'
  imageTag: '$(Build.BuildId)'

  # Based on PORT in Dockerfile. Otherwise default value set
  containerPort: '{{ containerPort }}'

  # Details of the deployment target
  ARMServiceConnection: '{{ ARMServiceConnection }}'
  functionAppName: '{{ functionAppName }}'

jobs:
- job: Build
  displayName: Build

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - use: docker
    auth:
    - $(containerRegistryServiceConnection)
  - script: |
      docker build -t $(containerRegistry)/$(imageName):$(imageTag)
      docker push $(containerRegistry)/$(imageName):$(imageTag)
    
- deployment: Deploy to Function App for Containers
  displayName: Deploy
  dependsOn: Build
  condition: succeeded()
  steps:
  - task: AzureFunctionAppContainer@1
    displayName: Deploy to Function App for Containers
    inputs:
      azureSubscription: $(ARMServiceConnection)
      appName: $(functionAppName)
      imageName: $(containerRegistry)/$(imageName):$(imageTag)
      appSettings: '-Port $(containerPort)'