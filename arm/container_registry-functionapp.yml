trigger:
- master

resources:
- repo: self

variables:
 # Update Azure.ResourceGroupName value with Azure resource group name.
  Azure.ResourceGroupName: '{{#toAlphaNumericString repositoryName 50}}{{/toAlphaNumericString}}'

  # Update Azure.ServiceConnectionId value with AzureRm service endpoint.
  Azure.ServiceConnectionId: '{{azureServiceConnectionId}}'

  # Update Azure.Location value with Azure Location.
  Azure.Location: 'eastus'

  ContainerRegistry.ServiceConnection: '{{containerRegistryServiceConnection}}'
  ContainerRegistry.Name: '{{containerRegistry}}'

  Image.Repository: '$(Build.Repository.Name)'
  Image.Tag: '$(Build.BuildId)'
  
  # Update FunctionApp.Name value with a name that identifies your new function app. Valid characters are a-z, 0-9, and -.
  FunctionApp.Name: '{{#toAlphaNumericString repositoryName 46}}{{/toAlphaNumericString}}{{#shortGuid}}{{/shortGuid}}'
  
  # Update StorageAccount.Name value with Storage account name. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  StorageAccount.Name: '{{#toAlphaNumericString repositoryName 20}}{{/toAlphaNumericString}}{{#shortGuid}}{{/shortGuid}}'
  
  # Update ServicePlan.Name value with a name of the app service plan.
  ServicePlan.Name: '{{#toAlphaNumericString repositoryName 45}}{{/toAlphaNumericString}}-plan'

  # Based on PORT in Dockerfile. Otherwise default value set
  Container.Port: {{containerPort}}

  # Implicilty generated during pipeline creation flow
  Environment.Name: '{{environmentName}}'
  Environment.FunctionAppResource.Name: '{{FunctionAppResourceName}}'

stages:
- stage: CreateResources
  displayName: Create resources stage
  jobs:
  - job: CreateResources
    displayName: Create resources job
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Azure Container Registry, Azure WebApp Service'
      inputs:
        azureSubscription: '$(Azure.ServiceConnectionId)'
        resourceGroupName: '$(Azure.ResourceGroupName)'
        location: '$(Azure.Location)'
        templateLocation: 'URL of the file'
        csmFileLink: 'https://raw.githubusercontent.com/Microsoft/azure-pipelines-yaml/master/templates/resources/arm/functionapp.json'
        overrideParameters: '-registryName "$(ContainerRegistry.Name)" -registryLocation "$(Azure.Location)" -functionAppName "$(FunctionApp.Name)" -hostingPlanName "$(ServicePlan.Name)" -storageAccountName "$(StorageAccount.Name)"'

- stage: Build
  displayName: Build stage
  dependsOn: CreateResources
  jobs:
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(Image.Repository)
        containerRegistries: |
          $(ContainerRegistry.ServiceConnection)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy to Function App for Containers
    displayName: Deploy job
    environment: $(Environment.Name).$(Environment.FunctionAppResource.Name)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionAppContainer@1
            displayName: 'Azure Function App on Container Deploy: $(FunctionApp.Name)'
            inputs:
              azureSubscription: '$(Azure.ServiceConnectionId)'
              appName: $(FunctionApp.Name)
              imageName: $(ContainerRegistry.Name)/$(Image.Repository):$(Image.Tag)
              appSettings: '-Port $(Container.Port)'